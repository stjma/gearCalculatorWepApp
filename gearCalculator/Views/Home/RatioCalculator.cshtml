
@{
    ViewData["Title"] = "Gear Ratio";
}

<h1>Gear Ratio</h1>

@{ 
    int ChainMin = 20;
    int chainMax = 75;

    List<int> listChain = new List<int>();


    for(int i = ChainMin; i <= chainMax; i++)
    {
        listChain.Add(i);
    }


    int cogMin = 8;
    int cogMax = 60;

    List<int> listCog = new List<int>();

    for (int i = cogMin; i <= cogMax; i++)
    {
        listCog.Add(i);
    }

}

@model GearViewModel
@using (Html.BeginForm())
{
<table class="table table-borderless table-responsive table-sm ">
    <tr>
        <td colspan="2">
            <div>
                <label>Chainring</label>
            </div>
        </td>
        <td colspan="3">
            <div>
                <label>Cog</label>
            </div>
        </td>
    </tr>

    <tr>
        <td>
            Min
        </td>

        <td>
            Max
        </td>

        <td>
            Min
        </td>

        <td colspan="2">
            Max
        </td>
    </tr>

    <tr>
        <td>
            @Html.DropDownListFor(s => s.Chainringmin, new SelectList(listChain), "")
        </td>
        <td>
            @Html.DropDownListFor(s => s.Chainringmax, new SelectList(listChain), "")
        </td>

        <td>
            @Html.DropDownListFor(s => s.Cogmin, new SelectList(listCog), "")
        </td>
        <td>
            @Html.DropDownListFor(s => s.Cogmax, new SelectList(listCog), "")
        </td>

        <td>
            <input id="Submit1" type="submit" value="Calculate" />
        </td>
    </tr>


    
</table>

}


@{
    var arrayobject = ViewBag.MyArray;

    if (arrayobject != null)
    {
        
        <table id="numbers-container" class="table table-bordered table-sm table-hover border-bottom">
            @foreach (var sublist in arrayobject)
            {
            <tr>
                @foreach (var value in sublist)
                {
                    @if (string.IsNullOrEmpty(value))
                    {
                        <td>@value</td>
                    }
                    else if (!value.ToString().Contains("."))
                    {
                        <td>@value</td>
                    }
                    else if (Double.Parse(value) > 3)
                    {
                        <td class="table-success">@value</td>
                    }
                    else if (Double.Parse(value) < 2)
                    {
                        <td class="table-danger">@value</td>
                    }
                    else
                    {
                        <td class="table-warning">@value</td>
                    }
                }
            </tr>
            }
        </table>

        <p> 3+ green, 2-3 yellow, -2 red</p>
    }

}


